bool isValidParenthesis(string expression)
{
    // Write your code here.
    stack<char> stk;

    for (char c : expression) {
      if (stk.empty() && (c == ')' || c == '}' || c == ']')) return false;
        if (c == '(' || c == '{' || c == '[')
          stk.push(c);

        else if (c == ')' && stk.top() == '(' || c == ']' && stk.top() == '[' ||
                 c == '}' && stk.top() == '{' )
          stk.pop();
        else return false;
    }
    if(stk.empty()) return true;

    return false;
}
